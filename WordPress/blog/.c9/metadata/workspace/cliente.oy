{"changed":true,"filter":false,"title":"cliente.oy","tooltip":"/cliente.oy","value":"import json\nimport requests\n\ndomain = \"localhost:8080/\"\n\n\"\"\"\nesta funcion recibe la matriz y la posicion x , y donde esta la posicion en blanco\n\"\"\"\ndef challenge( domain, matrix , x , y , opponentId ):\n    body = {\n        \"currentState\" : matrix,\n        \"blank\" : { \"row\" : x , \"column\" : y }\n    }\n    print domain + \"/api/player/%i/challenge/\" % ( opponentId ) \n    response = requests.post( domain + \"/api/player/%i/challenge/\" % ( opponentId ) , data = json.dumps( body ) )\n\"\"\"\n    funcion que retorna la matriz del reto que hizo un jugador\n\"\"\"\ndef get_challenge( domain , pId ):\n    r = requests.get( domain + \"/api/board/%s/\" % ( pId ))\n\n\"\"\"\nesta funcion recibe  el pid del jugador actual y mueve la ficha en blanco a la izquerda\n\"\"\"\ndef move_left( domain , pId ):\n    response = requests.post( domain + \"/api/player/%i/move/left/\" % ( pId ) )\n\"\"\"\nesta funcion recibe  el pid del jugador actual y mueve la ficha en blanco a la derecha\n\"\"\"\ndef move_right( domain , pId ):\n    response = requests.post( domain + \"/api/player/%i/move/right/\" % ( pId ) )\n\n\"\"\"\nesta funcion recibe  el pid del jugador actual y mueve la ficha en blanco a la arriba\n\"\"\"\ndef move_up( domain , pId ):\n    response = requests.post( domain + \"/api/player/%i/move/up/\" % ( pId ) )\n\"\"\"\nesta funcion recibe  el pid del jugador actual y mueve la ficha en blanco hacia abajo\n\"\"\"\ndef move_down( domain , pId ):\n    response = requests.post( domain + \"/api/player/%i/move/down/\" % ( pId ) )\n\ndef create_player(  domain , pId  , name ):\n    response = requests.post( domain + \"/api/player/%i/new/%s/\" % ( pId , name ) )\n\ndef main():\n    matrix = [ [ 1 , 5 ] , [ 2 , 4 ] ]\n    domain = raw_input( \"Ingrese el nombre de dominio\" )\n    pid = raw_input(\"ingrese el id del jugador\")\n    pid = int( pid )\n    oponnent = raw_input( \"ingrese el id del oponenete\")\n    oponnent = int( oponnent )\n    challenge( domain , matrix , 1 , 1 , oponnent )\n    \"\"\" hace el challenge de la matriz \"\"\"\n    while True:\n        direccion = raw_input( \"Ingrese la direccion R , L , U , D \")\n        if direccion == \"R\":\n            move_right( domain , pid )\n        elif direccion == \"L\":\n            move_left( domain , pid )\n        elif direccion == \"U\":\n            move_up( domain , pid )\n        elif direccion == \"D\":\n            move_down( domain , pid )\n\n\nif __name__ == '__main__':\n    main()\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["import json","import requests","","domain = \"localhost:8080/\"","","\"\"\"","esta funcion recibe la matriz y la posicion x , y donde esta la posicion en blanco","\"\"\"","def challenge( domain, matrix , x , y , opponentId ):","    body = {","        \"currentState\" : matrix,","        \"blank\" : { \"row\" : x , \"column\" : y }","    }","    print domain + \"/api/player/%i/challenge/\" % ( opponentId ) ","    response = requests.post( domain + \"/api/player/%i/challenge/\" % ( opponentId ) , data = json.dumps( body ) )","\"\"\"","    funcion que retorna la matriz del reto que hizo un jugador","\"\"\"","def get_challenge( domain , pId ):","    r = requests.get( domain + \"/api/board/%s/\" % ( pId ))","","\"\"\"","esta funcion recibe  el pid del jugador actual y mueve la ficha en blanco a la izquerda","\"\"\"","def move_left( domain , pId ):","    response = requests.post( domain + \"/api/player/%i/move/left/\" % ( pId ) )","\"\"\"","esta funcion recibe  el pid del jugador actual y mueve la ficha en blanco a la derecha","\"\"\"","def move_right( domain , pId ):","    response = requests.post( domain + \"/api/player/%i/move/right/\" % ( pId ) )","","\"\"\"","esta funcion recibe  el pid del jugador actual y mueve la ficha en blanco a la arriba","\"\"\"","def move_up( domain , pId ):","    response = requests.post( domain + \"/api/player/%i/move/up/\" % ( pId ) )","\"\"\"","esta funcion recibe  el pid del jugador actual y mueve la ficha en blanco hacia abajo","\"\"\"","def move_down( domain , pId ):","    response = requests.post( domain + \"/api/player/%i/move/down/\" % ( pId ) )","","def create_player(  domain , pId  , name ):","    response = requests.post( domain + \"/api/player/%i/new/%s/\" % ( pId , name ) )","","def main():","    matrix = [ [ 1 , 5 ] , [ 2 , 4 ] ]","    domain = raw_input( \"Ingrese el nombre de dominio\" )","    pid = raw_input(\"ingrese el id del jugador\")","    pid = int( pid )","    oponnent = raw_input( \"ingrese el id del oponenete\")","    oponnent = int( oponnent )","    challenge( domain , matrix , 1 , 1 , oponnent )","    \"\"\" hace el challenge de la matriz \"\"\"","    while True:","        direccion = raw_input( \"Ingrese la direccion R , L , U , D \")","        if direccion == \"R\":","            move_right( domain , pid )","        elif direccion == \"L\":","            move_left( domain , pid )","        elif direccion == \"U\":","            move_up( domain , pid )","        elif direccion == \"D\":","            move_down( domain , pid )","","","if __name__ == '__main__':","    main()",""],"id":1}]]},"ace":{"folds":[],"scrolltop":512,"scrollleft":0,"selection":{"start":{"row":69,"column":0},"end":{"row":69,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":35,"state":"start","mode":"ace/mode/text"}},"timestamp":1458267558425}